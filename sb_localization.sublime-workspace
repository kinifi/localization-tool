{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"m",
				"m_KeyValue\tint"
			],
			[
				"edist",
				"EditorStyles\tEditorStyles"
			],
			[
				"bo",
				"boldLabel\tGUIStyle { get; }"
			],
			[
				"GUYI",
				"GUILayout\tGUILayout"
			],
			[
				"mL",
				"m_LanguageKey\tstring"
			],
			[
				"m_lang",
				"m_LanguageKey\tstring"
			],
			[
				"newkey",
				"mNewKey\tstring"
			],
			[
				"editing",
				"m_editingKey\tint"
			],
			[
				"new",
				"mNewValue\tstring"
			],
			[
				"is",
				"isEditing\tbool"
			],
			[
				"mNew",
				"mNewValue\tstring"
			],
			[
				"chin",
				"m_Chinese\tList<string>"
			],
			[
				"slo",
				"m_Slovak\tList<string>"
			],
			[
				"th",
				"m_Thai\tList<string>"
			],
			[
				"chine",
				"m_ChineseTraditional\tList<string>"
			],
			[
				"slov",
				"Slovenian\tSystemLanguage"
			],
			[
				"labe",
				"miniLabel\tGUIStyle { get; }"
			],
			[
				"Begin",
				"BeginHorizontal(params GUILayoutOption[] options)\tvoid"
			],
			[
				"end",
				"EndVertical()\tvoid"
			],
			[
				"be",
				"BeginHorizontal(params GUILayoutOption[] options)\tvoid"
			],
			[
				"mnew",
				"mNewValue\tstring"
			],
			[
				"Guila",
				"GUILayout\tGUILayout"
			],
			[
				"editorgui",
				"EditorGUILayout\tEditorGUILayout"
			],
			[
				"End",
				"EndHorizontal()\tvoid"
			],
			[
				"Be",
				"BeginHorizontal(params GUILayoutOption[] options)\tvoid"
			],
			[
				"En",
				"EndVertical()\tvoid"
			],
			[
				"Edit",
				"EditingUI()\tvoid"
			],
			[
				"newky",
				"mNewKey\tstring"
			],
			[
				"tool",
				"toolbarButton\tGUIStyle { get; }"
			],
			[
				"toolb",
				"toolbarTextField\tGUIStyle { get; }"
			],
			[
				"text",
				"TextField(string text, params GUILayoutOption[] options)\tstring"
			],
			[
				"editorGUi",
				"EditorGUILayout\tEditorGUILayout"
			],
			[
				"GUL",
				"GUILayout\tGUILayout"
			],
			[
				"toolbar",
				"toolbarPopup\tGUIStyle { get; }"
			],
			[
				"GUiLa",
				"GUILayout\tGUILayout"
			],
			[
				"systemlan",
				"SystemLanguage\tSystemLanguage"
			],
			[
				"Remov",
				"RemoveAt(int index)\tvoid"
			],
			[
				"Lagn",
				"LanguageValue\tLanguageValue"
			],
			[
				"Language",
				"LanguageValue()\tLanguageValue()"
			],
			[
				"GUIla",
				"GUILayout\tGUILayout"
			],
			[
				"GUILa",
				"GUILayout\tGUILayout"
			],
			[
				"GUila",
				"GUILayout\tGUILayout"
			],
			[
				"GUILay",
				"GUILayout\tGUILayout"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "using UnityEngine;\nusing UnityEditor;\nusing System;\nusing System.IO;\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine.Assertions;\n\npublic class LanguageEditor : EditorWindow\n{\n\n\tprivate Language mLevel = null;\n\tprivate bool mIsInitalized = false;\n\tprivate string m_NotificationText = \"Select A Language Asset\";\n\n  \tprivate SystemLanguage newSystemLanguage = SystemLanguage.English;\n\n  \tprivate Vector2 scrollPos;\n\n\t//temp values used when creating a new key\n\tprivate string mNewKey, mNewValue, mOriginText;\n    //the value of the text in the current language\n    public string newLanguageValue;\n    //currently editing key and value\n    private int m_editingKey, m_editingValue;\n    private SystemLanguage m_currentEditedLanguage;\n\n\t[MenuItem(\"Window/Language Editor %l\")]\n\tpublic static void ShowEditor()\n\t{\n\n\t\t//create the editor window\n\t\tLanguageEditor editor = EditorWindow.GetWindow<LanguageEditor>();\n\t\t//the editor window must have a min size\n\t\teditor.titleContent = new GUIContent(\"Language Editor\");\n\t\teditor.minSize = new Vector2 (600, 400);\n\t\t//call the init method after we create our window\n\t\teditor.Init();\n\n\t}\n\n\n\tprivate void Init()\n\t{\n\t\t//check if we are initialized or not\n\t\tif(mIsInitalized == true)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\t//detect what type of object we have selected\n\t\tDetectSelectedFile();\n\t}\n\n\t//draws the UI\n\tprivate void OnGUI()\n\t{\n\n\t\tif(mIsInitalized == false)\n\t\t{\n\t\t\t// GUILayout.Label(\"Language Editor\");\n\t\t\tthis.ShowNotification(new GUIContent(m_NotificationText));\n\t\t\treturn;\n\t\t}\n\n\t\ttoolbarUI();\n\n\t\tTableDisplay();\n\n\t\tEditingUI();\n\n\t}\n\n\tprivate void TableDisplay()\n\t{\n\n\t\t//make sure the level is not null\n\t\tif(mLevel == null)\n\t\t\treturn;\n\n\t\t//check if we have any keys to display\n\t\tif(mLevel.m_Keys.Count == 0)\n\t\t{\n\t\t\tGUILayout.Label(\"No Keys or Values to Display\", EditorStyles.miniBoldLabel);\n\t\t\treturn;\n\t\t}\n\n\t\t//make a container of these blocks of data\n\t\tGUILayout.BeginVertical();\n\n\t\tGUILayout.Label(\"Localization Table View\", EditorStyles.miniLabel);\n\n\t\t//start the scroll view\n\t\tscrollPos = EditorGUILayout.BeginScrollView(scrollPos);\n\n\t\t//loop through the keys and add rows for them\n\t\tfor (int i = 1; i <= mLevel.m_Keys.Count; i++)\n        {\n            GUILayout.BeginHorizontal(EditorStyles.helpBox);\n\n\n\n            //check what language is selected\n            switch (newSystemLanguage)\n\t\t\t{\n\t\t\t    case SystemLanguage.Afrikaans:\n\t\t\t        newLanguageValue = mLevel.m_Afrikaans[i-1];\n\t\t\t        m_currentEditedLanguage = SystemLanguage.Afrikaans;\n\t\t\t        break;\n\t\t\t    case SystemLanguage.Arabic:\n\t\t\t        newLanguageValue = mLevel.m_Arabic[i-1];\n\t\t\t        break;\n\t\t        case SystemLanguage.Basque:\n\t\t\t        newLanguageValue = mLevel.m_Basque[i-1];\n\t\t\t        break;\n\t\t        case SystemLanguage.Belarusian:\n\t\t\t        newLanguageValue = mLevel.m_Belarusian[i-1];\n\t\t\t        break;\n\t\t        case SystemLanguage.Catalan:\n\t\t\t        newLanguageValue = mLevel.m_Catalan[i-1];\n\t\t\t        break;\n\t\t\t    case SystemLanguage.Chinese:\n\t\t\t        newLanguageValue = mLevel.m_Chinese[i-1];\n\t\t\t        break;\n\t\t\t    case SystemLanguage.Czech:\n\t\t\t        newLanguageValue = mLevel.m_Czech[i-1];\n\t\t\t        break;\n\t\t\t    case SystemLanguage.Danish:\n\t\t\t        newLanguageValue = mLevel.m_Danish[i-1];\n\t\t\t        break;\n\t\t\t    case SystemLanguage.Dutch:\n\t\t\t        newLanguageValue = mLevel.m_Dutch[i-1];\n\t\t\t        break;\n\t\t        case SystemLanguage.English:\n\t\t\t        newLanguageValue = mLevel.m_English[i-1];\n\t\t\t        break;\n\t\t        case SystemLanguage.Estonian:\n\t\t\t        newLanguageValue = mLevel.m_Estonian[i-1];\n\t\t\t        break;\n\t\t        case SystemLanguage.Faroese:\n\t\t\t        newLanguageValue = mLevel.m_Faroese[i-1];\n\t\t\t        break;\n\t\t\t    case SystemLanguage.Finnish:\n\t\t\t        newLanguageValue = mLevel.m_Finnish[i-1];\n\t\t\t        break;\n\t\t        case SystemLanguage.French:\n\t\t\t        newLanguageValue = mLevel.m_French[i-1];\n\t\t\t        break;\n\t\t\t    case SystemLanguage.German:\n\t\t\t        newLanguageValue = mLevel.m_German[i-1];\n\t\t\t        break;\n\t\t        case SystemLanguage.Greek:\n\t\t\t        newLanguageValue = mLevel.m_Greek[i-1];\n\t\t\t        break;\n\t\t        case SystemLanguage.Hebrew:\n\t\t\t        newLanguageValue = mLevel.m_Hebrew[i-1];\n\t\t\t        break;\n\t\t        case SystemLanguage.Icelandic:\n\t\t\t        newLanguageValue = mLevel.m_Icelandic[i-1];\n\t\t\t        break;\n\t\t        case SystemLanguage.Indonesian:\n\t\t\t        newLanguageValue = mLevel.m_Indonesian[i-1];\n\t\t\t        break;\n\t\t        case SystemLanguage.Italian:\n\t\t\t        newLanguageValue = mLevel.m_Italian[i-1];\n\t\t\t        break;\n\t\t        case SystemLanguage.Japanese:\n\t\t\t        newLanguageValue = mLevel.m_Japanese[i-1];\n\t\t\t        break;\n\t\t        case SystemLanguage.Korean:\n\t\t\t        newLanguageValue = mLevel.m_Korean[i-1];\n\t\t\t        break;\n\t\t        case SystemLanguage.Latvian:\n\t\t\t        newLanguageValue = mLevel.m_Latvian[i-1];\n\t\t\t        break;\n\t\t        case SystemLanguage.Lithuanian:\n\t\t\t        newLanguageValue = mLevel.m_Lithuanian[i-1];\n\t\t\t        break;\n\t\t        case SystemLanguage.Norwegian:\n\t\t\t        newLanguageValue = mLevel.m_Norwegian[i-1];\n\t\t\t        break;\n\t\t        case SystemLanguage.Polish:\n\t\t\t        newLanguageValue = mLevel.m_Polish[i-1];\n\t\t\t        break;\n\t\t        case SystemLanguage.Portuguese:\n\t\t\t        newLanguageValue = mLevel.m_Portuguese[i-1];\n\t\t\t        break;\n\t\t        case SystemLanguage.Romanian:\n\t\t\t        newLanguageValue = mLevel.m_Romanian[i-1];\n\t\t\t        break;\n\t\t        case SystemLanguage.Russian:\n\t\t\t        newLanguageValue = mLevel.m_Russian[i-1];\n\t\t\t        break;\n\t\t        case SystemLanguage.SerboCroatian:\n\t\t\t        newLanguageValue = mLevel.m_SerboCroatian[i-1];\n\t\t\t        break;\n\t\t        case SystemLanguage.Slovak:\n\t\t\t        newLanguageValue = mLevel.m_Slovak[i-1];\n\t\t\t        break;\n\t\t        case SystemLanguage.Slovenian:\n\t\t\t        newLanguageValue = mLevel.m_Slovenian[i-1];\n\t\t\t        break;\n\t\t        case SystemLanguage.Spanish:\n\t\t\t        newLanguageValue = mLevel.m_Spanish[i-1];\n\t\t\t        break;\n\t\t        case SystemLanguage.Swedish:\n\t\t\t        newLanguageValue = mLevel.m_Swedish[i-1];\n\t\t\t        break;\n\t\t        case SystemLanguage.Thai:\n\t\t\t        newLanguageValue = mLevel.m_Thai[i-1];\n\t\t\t        break;\n\t\t        case SystemLanguage.Turkish:\n\t\t\t        newLanguageValue = mLevel.m_Turkish[i-1];\n\t\t\t        break;\n\t\t        case SystemLanguage.Ukrainian:\n\t\t\t        newLanguageValue = mLevel.m_Ukrainian[i-1];\n\t\t\t        break;\n\t\t        case SystemLanguage.Vietnamese:\n\t\t\t        newLanguageValue = mLevel.m_Vietnamese[i-1];\n\t\t\t        break;\n\t\t        case SystemLanguage.ChineseSimplified:\n\t\t\t        newLanguageValue = mLevel.m_ChineseSimplified[i-1];\n\t\t\t        break;\n\t\t        case SystemLanguage.ChineseTraditional:\n\t\t\t        newLanguageValue = mLevel.m_ChineseTraditional[i-1];\n\t\t\t        break;\n\t\t\t    case SystemLanguage.Hungarian:\n\t\t\t        newLanguageValue = mLevel.m_Hungarian[i-1];\n\t\t\t        break;    \n\t\t        case SystemLanguage.Unknown:\n\t\t\t        newLanguageValue = mLevel.m_Unknown[i-1];\n\t\t\t        break;\n\t\t    }\n\n\t\t    GUILayout.Label(\"Key: \" + mLevel.m_Keys[i-1] + \" | Value: \" + newLanguageValue);\n\n            if(GUILayout.Button(\"Edit\", GUILayout.Width(50)))\n            {\n            \tmNewKey = mLevel.m_Keys[i-1];\n            \tm_editingKey = i-1;\n            \tmNewValue = newLanguageValue;\n\n            }\n\n\t\t\tif(GUILayout.Button(\"Delete\", GUILayout.Width(50)))\n            {\n            \tmLevel.m_Keys.RemoveAt(i-1);\n            }            \n\n            GUILayout.EndHorizontal();\n        }\n\n        //end the scrollview \n        EditorGUILayout.EndScrollView();\n\n\t\tGUILayout.EndVertical();\n\t}\n\n\tprivate void EditingUI()\n\t{\n\t\tGUILayout.Space(50);\n\t\tGUILayout.BeginHorizontal();\n\n\t\t// //display the text box that shows the games native language and its original value\n\t\t// GUILayout.BeginVertical();\n\t\t// GUILayout.Label(\"Origin Text\");\n\t\t// mOriginText = EditorGUILayout.TextArea(mOriginText, GUILayout.Height(100), GUILayout.Width(position.width/2));\n\t\t// GUILayout.EndVertical();\n\n\t\t//display the text box for someone to translate the text\n\t\tGUILayout.BeginVertical();\n\t\tGUILayout.Label(\"Translated Text\");\n\t\tmNewValue = EditorGUILayout.TextArea(mNewValue, GUILayout.Height(100), GUILayout.Width(position.width-10));\n\t\t\n\t\tGUILayout.BeginHorizontal();\n\t\t//clear the translated text box\n\t\tif(GUILayout.Button(\"Clear Translated Text\"))\n\t\t{\n\t\t\t//clear the text\n\t\t\tmNewValue = \"\";\n\t\t}\n\n\t\t//submit button for the translated text\n\t\tif(GUILayout.Button(\"Submit Translated Text\"))\n\t\t{\n\n\t\t\t//set the key to the correct language you are editing\n\t\t\tmLevel.m_Keys[m_editingKey] = mNewKey;\n\n\n            //set the value to the correct language you are editing\n            switch (newSystemLanguage)\n\t\t\t{\n\t\t\t    case SystemLanguage.Afrikaans:\n\t\t\t        mLevel.m_Afrikaans[m_editingKey] = mNewValue;\n\t\t\t        break;\n\t\t\t    case SystemLanguage.Arabic:\n\t\t\t        mLevel.m_Arabic[m_editingKey] = mNewValue;\n\t\t\t        break;\n\t\t        case SystemLanguage.Basque:\n\t\t\t        mLevel.m_Basque[m_editingKey] = mNewValue;\n\t\t\t        break;\n\t\t        case SystemLanguage.Belarusian:\n\t\t\t        mLevel.m_Belarusian[m_editingKey] = mNewValue;\n\t\t\t        break;\n\t\t        case SystemLanguage.Catalan:\n\t\t\t        mLevel.m_Catalan[m_editingKey] = mNewValue;\n\t\t\t        break;\n\t\t\t    case SystemLanguage.Chinese:\n\t\t\t        mLevel.m_Chinese[m_editingKey] = mNewValue;\n\t\t\t        break;\n\t\t\t    case SystemLanguage.Czech:\n\t\t\t        mLevel.m_Czech[m_editingKey] = mNewValue;\n\t\t\t        break;\n\t\t\t    case SystemLanguage.Danish:\n\t\t\t        mLevel.m_Danish[m_editingKey] = mNewValue;\n\t\t\t        break;\n\t\t\t    case SystemLanguage.Dutch:\n\t\t\t        mLevel.m_Dutch[m_editingKey] = mNewValue;\n\t\t\t        break;\n\t\t        case SystemLanguage.English:\n\t\t\t        mLevel.m_English[m_editingKey] = mNewValue;\n\t\t\t        break;\n\t\t        case SystemLanguage.Estonian:\n\t\t\t        mLevel.m_Estonian[m_editingKey] = mNewValue;\n\t\t\t        break;\n\t\t        case SystemLanguage.Faroese:\n\t\t\t        mLevel.m_Faroese[m_editingKey] = mNewValue;\n\t\t\t        break;\n\t\t\t    case SystemLanguage.Finnish:\n\t\t\t        mLevel.m_Finnish[m_editingKey] = mNewValue;\n\t\t\t        break;\n\t\t        case SystemLanguage.French:\n\t\t\t        mLevel.m_French[m_editingKey] = mNewValue;\n\t\t\t        break;\n\t\t\t    case SystemLanguage.German:\n\t\t\t        mLevel.m_German[m_editingKey] = mNewValue;\n\t\t\t        break;\n\t\t        case SystemLanguage.Greek:\n\t\t\t        mLevel.m_Greek[m_editingKey] = mNewValue;\n\t\t\t        break;\n\t\t        case SystemLanguage.Hebrew:\n\t\t\t        mLevel.m_Hebrew[m_editingKey] = mNewValue;\n\t\t\t        break;\n\t\t        case SystemLanguage.Icelandic:\n\t\t\t        mLevel.m_Icelandic[m_editingKey] = mNewValue;\n\t\t\t        break;\n\t\t        case SystemLanguage.Indonesian:\n\t\t\t        mLevel.m_Indonesian[m_editingKey] = mNewValue;\n\t\t\t        break;\n\t\t        case SystemLanguage.Italian:\n\t\t\t        mLevel.m_Italian[m_editingKey] = mNewValue;\n\t\t\t        break;\n\t\t        case SystemLanguage.Japanese:\n\t\t\t        mLevel.m_Japanese[m_editingKey] = mNewValue;\n\t\t\t        break;\n\t\t        case SystemLanguage.Korean:\n\t\t\t        mLevel.m_Korean[m_editingKey] = mNewValue;\n\t\t\t        break;\n\t\t        case SystemLanguage.Latvian:\n\t\t\t        mLevel.m_Latvian[m_editingKey] = mNewValue;\n\t\t\t        break;\n\t\t        case SystemLanguage.Lithuanian:\n\t\t\t        mLevel.m_Lithuanian[m_editingKey] = mNewValue;\n\t\t\t        break;\n\t\t        case SystemLanguage.Norwegian:\n\t\t\t        mLevel.m_Norwegian[m_editingKey] = mNewValue;\n\t\t\t        break;\n\t\t        case SystemLanguage.Polish:\n\t\t\t        mLevel.m_Polish[m_editingKey] = mNewValue;\n\t\t\t        break;\n\t\t        case SystemLanguage.Portuguese:\n\t\t\t        mLevel.m_Portuguese[m_editingKey] = mNewValue;\n\t\t\t        break;\n\t\t        case SystemLanguage.Romanian:\n\t\t\t        mLevel.m_Romanian[m_editingKey] = mNewValue;\n\t\t\t        break;\n\t\t        case SystemLanguage.Russian:\n\t\t\t        mLevel.m_Russian[m_editingKey] = mNewValue;\n\t\t\t        break;\n\t\t        case SystemLanguage.SerboCroatian:\n\t\t\t        mLevel.m_SerboCroatian[m_editingKey] = mNewValue;\n\t\t\t        break;\n\t\t        case SystemLanguage.Slovak:\n\t\t\t        mLevel.m_Slovak[m_editingKey] = mNewValue;\n\t\t\t        break;\n\t\t        case SystemLanguage.Slovenian:\n\t\t\t        mLevel.m_Slovenian[m_editingKey] = mNewValue;\n\t\t\t        break;\n\t\t        case SystemLanguage.Spanish:\n\t\t\t        mLevel.m_Spanish[m_editingKey] = mNewValue;\n\t\t\t        break;\n\t\t        case SystemLanguage.Swedish:\n\t\t\t        mLevel.m_Swedish[m_editingKey] = mNewValue;\n\t\t\t        break;\n\t\t        case SystemLanguage.Thai:\n\t\t\t        mLevel.m_Thai[m_editingKey] = mNewValue;\n\t\t\t        break;\n\t\t        case SystemLanguage.Turkish:\n\t\t\t        mLevel.m_Turkish[m_editingKey] = mNewValue;\n\t\t\t        break;\n\t\t        case SystemLanguage.Ukrainian:\n\t\t\t        mLevel.m_Ukrainian[m_editingKey] = mNewValue;\n\t\t\t        break;\n\t\t        case SystemLanguage.Vietnamese:\n\t\t\t        mLevel.m_Vietnamese[m_editingKey] = mNewValue;\n\t\t\t        break;\n\t\t        case SystemLanguage.ChineseSimplified:\n\t\t\t        mLevel.m_ChineseSimplified[m_editingKey] = mNewValue;\n\t\t\t        break;\n\t\t        case SystemLanguage.ChineseTraditional:\n\t\t\t        mLevel.m_ChineseTraditional[m_editingKey] = mNewValue;\n\t\t\t        break;\n\t\t\t    case SystemLanguage.Hungarian:\n\t\t\t        mLevel.m_Hungarian[m_editingKey] = mNewValue;\n\t\t\t        break;    \n\t\t        case SystemLanguage.Unknown:\n\t\t\t        mLevel.m_Unknown[m_editingKey] = mNewValue;\n\t\t\t        break;\n\t\t    }\n\n\t\t    //clear the text box\n\t\t    mNewValue = \"\";\n\n\t\t\t//save the asset\n\t\t\tAssetDatabase.SaveAssets();\n\n\t\t\t// Debug.Log(\"Translated Text: \" + mNewValue);\n\t\t}\n\t\tGUILayout.EndHorizontal();\n\n\t\tGUILayout.Space(20);\n\n\t\tGUILayout.EndVertical();\n\n\t\tGUILayout.EndHorizontal();\n\n\n\n\t}\n\n\n\tprivate void toolbarUI()\n\t{\n\t\tGUILayout.BeginHorizontal(EditorStyles.toolbar);\n\n\t\tNewKeyCreation();\n\n\t\tLanguageSelectionDropdown();\n\n\t\t\n\n\t\tGUILayout.EndHorizontal();\n\t}\n\n\tprivate void NewKeyCreation()\n\t{\n\t\tmNewKey = EditorGUILayout.TextField(\"Create A New Key: \", mNewKey, EditorStyles.toolbarTextField, GUILayout.Width(400));\n\n\t\tif(GUILayout.Button(\"+\", EditorStyles.toolbarButton, GUILayout.Width(30)))\n\t\t{\n\t\t\t//save the new key here\n\n\t\t\t//save the key to mLevel.m_Keys\n\t\t\tmLevel.m_Keys.Add(mNewKey);\n\t\t\t//add a new string value to every language\n\t\t\tmLevel.m_Afrikaans.Add(\"\");\n\t\t\tmLevel.m_Arabic.Add(\"\");\n\t\t\tmLevel.m_Basque.Add(\"\");\n\t\t\tmLevel.m_Belarusian.Add(\"\");\n\t\t\tmLevel.m_Belgarian.Add(\"\");\n\t\t\tmLevel.m_Catalan.Add(\"\");\n\t\t\tmLevel.m_Chinese.Add(\"\");\n\t\t\tmLevel.m_Czech.Add(\"\");\n\t\t\tmLevel.m_Danish.Add(\"\");\n\t\t\tmLevel.m_Dutch.Add(\"\");\n\t\t\tmLevel.m_English.Add(\"\");\n\t\t\tmLevel.m_Estonian.Add(\"\");\n\t\t\tmLevel.m_Faroese.Add(\"\");\n\t\t\tmLevel.m_Finnish.Add(\"\");\n\t\t\tmLevel.m_French.Add(\"\");\n\t\t\tmLevel.m_German.Add(\"\");\n\t\t\tmLevel.m_Greek.Add(\"\");\n\t\t\tmLevel.m_Hebrew.Add(\"\");\n\t\t\tmLevel.m_Icelandic.Add(\"\");\n\t\t\tmLevel.m_Indonesian.Add(\"\");\n\t\t\tmLevel.m_Italian.Add(\"\");\n\t\t\tmLevel.m_Japanese.Add(\"\");\n\t\t\tmLevel.m_Korean.Add(\"\");\n\t\t\tmLevel.m_Latvian.Add(\"\");\n\t\t\tmLevel.m_Lithuanian.Add(\"\");\n\t\t\tmLevel.m_Norwegian.Add(\"\");\n\t\t\tmLevel.m_Polish.Add(\"\");\n\t\t\tmLevel.m_Portuguese.Add(\"\");\n\t\t\tmLevel.m_Romanian.Add(\"\");\n\t\t\tmLevel.m_Russian.Add(\"\");\n\t\t\tmLevel.m_SerboCroatian.Add(\"\");\n\t\t\tmLevel.m_Slovak.Add(\"\");\n\t\t\tmLevel.m_Slovenian.Add(\"\");\n\t\t\tmLevel.m_Spanish.Add(\"\");\n\t\t\tmLevel.m_Swedish.Add(\"\");\n\t\t\tmLevel.m_Thai.Add(\"\");\n\t\t\tmLevel.m_Turkish.Add(\"\");\n\t\t\tmLevel.m_Ukrainian.Add(\"\");\n\t\t\tmLevel.m_Vietnamese.Add(\"\");\n\t\t\tmLevel.m_ChineseSimplified.Add(\"\");\n\t\t\tmLevel.m_ChineseTraditional.Add(\"\");\n\t\t\tmLevel.m_Unknown.Add(\"\");\n\n\n\t\t\t// Debug.Log(\"Add Key:\" + mNewKey);\n\n\t\t\t//clear the new key\n\t\t\tmNewKey = \"\";\n\t\t}\n\n\t}\n\n\t//draws the dropdown menu for the language you are writing in\n\tprivate void LanguageSelectionDropdown()\n\t{\n\n\t\tEditorGUILayout.Space();\n\n\t\t// GUILayout.Label(\"Select A Language To Modify\", EditorStyles.toolbar);\n\n\t\t//save the language settings\n\t\tSystemLanguage storedLanguage = newSystemLanguage;\n\n\t\t//display the system language enum selection\n\t\tnewSystemLanguage = (SystemLanguage)EditorGUILayout.EnumPopup(\n\t\t  \"Language: \",\n\t\t  newSystemLanguage, EditorStyles.toolbarPopup, GUILayout.Width(300));\n\n\t\t//TODO: check if this value changes so we can update values in the table\n\t\tif(storedLanguage != newSystemLanguage)\n\t\t{\n\t\t\tDebug.Log(\"Language Enum Changed\");\n\t\t}\n\n\n\t}\n\n\n\t//helper methods\n\n\t//clears the creation fields to blank strings\n\tprivate void ClearCreationFields()\n\t{\n\t\tmNewValue = \"\";\n\t\tmNewKey = \"\";\n\t\tRepaint();\n\t}\n\n\n\n\t//UNITY EVENTS START\n\t//All will reset the editor window\n\n\tpublic void PlaymodeChanged()\n\t{\n\t\tDetectSelectedFile();\n\t\tRepaint();\n\t}\n\n\tpublic void OnLostFocus ()\n\t{\n\t\tDetectSelectedFile();\n\t\tRepaint();\n\t}\n\n\tpublic void OnFocus()\n\t{\n\t\tDetectSelectedFile();\n\t\tRepaint();\n\t}\n\n\tpublic void OnProjectChange ()\n\t{\n\t\tDetectSelectedFile();\n\t\tRepaint();\n\t}\n\n\tpublic void OnSelectionChange ()\n\t{\n\t\tDetectSelectedFile();\n\t\tRepaint();\n\t}\n\t//UNITY EVENTS END\n\n\n\t//checks what object we have selected and gets the data if its the correct type\n\tprivate void DetectSelectedFile()\n\t{\n\t\tLanguage selectedAsset = null;\n\n\t\t//check if we aren't selecting a game object\n\t\tif (Selection.activeObject == null)\n\t\t{\n\t\t\t//the selected object is null\n\t\t\tmLevel = null;\n\t\t\tmIsInitalized = false;\n\t\t\tselectedAsset = null;\n\t\t}\n\n\t\t//check if the object we have selected is a language file\n\t\tif (Selection.activeObject is Language && EditorUtility.IsPersistent(Selection.activeObject))\n\t\t{\n\t\t\t//set the language file we have selected to be manipulated\n\t\t\tselectedAsset = Selection.activeObject as Language;\n\t\t\tmLevel = selectedAsset;\n\t\t\tmIsInitalized = true;\n\t        this.RemoveNotification();\n\t        \n\t\t}\n\t\telse\n\t\t{\n\t\t\t//the selected object is null\n\t\t\tmIsInitalized = false;\n\t\t\tselectedAsset = null;\n\t\t\tmLevel = null;\n\t\t}\n\n\t}\n\n\n}\n",
			"file": "Assets/Language-Tool/Editor/LanguageEditor.cs",
			"file_size": 18487,
			"file_write_time": 131209431720099944,
			"settings":
			{
				"buffer_size": 17866,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 210.0,
		"last_filter": "boxy",
		"selected_items":
		[
			[
				"boxy",
				"Boxy Theme: Extras"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"toggle open",
				"View: Toggle Open Files in Side Bar"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			]
		],
		"width": 414.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/chrisf/Documents/GitHub/localization-tool",
		"/C/Users/chrisf/Documents/GitHub/localization-tool/Assets",
		"/C/Users/chrisf/Documents/GitHub/localization-tool/Assets/Language-Tool",
		"/C/Users/chrisf/Documents/GitHub/localization-tool/Assets/Language-Tool/Classes",
		"/C/Users/chrisf/Documents/GitHub/localization-tool/Assets/Language-Tool/Editor"
	],
	"file_history":
	[
		"/C/Users/chrisf/Documents/GitHub/localization-tool/Assets/Language-Tool/Editor/LocalizeTextInspector.cs",
		"/C/Users/chrisf/Documents/GitHub/localization-tool/Assets/Language-Tool/UI-Helpers/LocalizeText.cs",
		"/C/Users/chrisf/Documents/GitHub/localization-tool/Assets/Language-Tool/Editor/LanguageEditor.cs",
		"/C/Users/chrisf/Documents/GitHub/localization-tool/Assets/Language-Tool/Editor/LanguageInspector.cs",
		"/C/Users/chrisf/Documents/GitHub/localization-tool/Assets/Language-Tool/Classes/Language.cs",
		"/C/Users/chrisf/Documents/GitHub/localization-tool/Assets/testScript.cs",
		"/C/Users/chrisf/Documents/GitHub/localization-tool/Assets/Language-Tool/Classes/LanguageValue.cs",
		"/D/Unity Projects/animationclipadd/Assets/animtest.cs",
		"/D/Xbox One Resources/XBONE Help Docs/Angry Bots Application Info.txt",
		"/D/Xbox One Resources/XBONE Help Docs/Xbox_Accounts.txt",
		"/D/Unity Projects/xboxdennistest/Assets/GameDVR/GameDVRMainMenu.cs",
		"/C/Users/chrisf/.hgrc",
		"/C/Users/Unity",
		"/D/Unity Projects/XboxOne-Addon/Assets/Editor/XboxOneDocs.cs",
		"/D/Unity Projects/portnumberneeded/New Unity Project/Assets/Multiplayer/Common/Game/JoinFriendGameSession.cs",
		"/D/Unity Projects/portnumberneeded/New Unity Project/Assets/Multiplayer/MP2015/MP2015.cs",
		"/C/Users/chrisf/AppData/Roaming/Sublime Text 3/Packages/User/C#.sublime-settings",
		"/C/Users/chrisf/Documents/GitHub/localization-tool/sb_localization.sublime-project",
		"/C/Users/chrisf/AppData/Roaming/Sublime Text 3/Packages/User/Plain text.sublime-settings",
		"/C/Users/chrisf/AppData/Roaming/Sublime Text 3/Packages/User/Preferences.sublime-settings"
	],
	"find":
	{
		"height": 48.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"LanguageSelectionDropdown",
			"newSystemLanguage",
			"DetectSelectedFile",
			"mLevel.m_Keys",
			"DisplayKeys",
			"DisplayKeys()",
			"port",
			"m_NewValue",
			"m_newvalue"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Assets/Language-Tool/Editor/LanguageEditor.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17866,
						"regions":
						{
						},
						"selection":
						[
							[
								13972,
								13972
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 6001.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 98.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.variable_get":
	{
		"height": 86.0
	},
	"pinned_build_system": "",
	"project": "sb_localization.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"lan",
				"Assets\\Language-Tool\\Classes\\Language.cs"
			],
			[
				"localizete",
				"Assets\\Language-Tool\\UI-Helpers\\LocalizeText.cs"
			],
			[
				"testsc",
				"Assets\\testScript.cs"
			],
			[
				"language",
				"Assets\\Language-Tool\\Classes\\Language.cs"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 276.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
