{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"newkey",
				"mNewKey\tstring"
			],
			[
				"m",
				"m_editingKey\tint"
			],
			[
				"editing",
				"m_editingKey\tint"
			],
			[
				"new",
				"mNewValue\tstring"
			],
			[
				"is",
				"isEditing\tbool"
			],
			[
				"mNew",
				"mNewValue\tstring"
			],
			[
				"chin",
				"m_Chinese\tList<string>"
			],
			[
				"slo",
				"m_Slovak\tList<string>"
			],
			[
				"th",
				"m_Thai\tList<string>"
			],
			[
				"chine",
				"m_ChineseTraditional\tList<string>"
			],
			[
				"slov",
				"Slovenian\tSystemLanguage"
			],
			[
				"labe",
				"miniLabel\tGUIStyle { get; }"
			],
			[
				"Begin",
				"BeginHorizontal(params GUILayoutOption[] options)\tvoid"
			],
			[
				"end",
				"EndVertical()\tvoid"
			],
			[
				"be",
				"BeginHorizontal(params GUILayoutOption[] options)\tvoid"
			],
			[
				"mnew",
				"mNewValue\tstring"
			],
			[
				"Guila",
				"GUILayout\tGUILayout"
			],
			[
				"editorgui",
				"EditorGUILayout\tEditorGUILayout"
			],
			[
				"End",
				"EndHorizontal()\tvoid"
			],
			[
				"Be",
				"BeginHorizontal(params GUILayoutOption[] options)\tvoid"
			],
			[
				"En",
				"EndVertical()\tvoid"
			],
			[
				"Edit",
				"EditingUI()\tvoid"
			],
			[
				"newky",
				"mNewKey\tstring"
			],
			[
				"tool",
				"toolbarButton\tGUIStyle { get; }"
			],
			[
				"toolb",
				"toolbarTextField\tGUIStyle { get; }"
			],
			[
				"text",
				"TextField(string text, params GUILayoutOption[] options)\tstring"
			],
			[
				"editorGUi",
				"EditorGUILayout\tEditorGUILayout"
			],
			[
				"GUL",
				"GUILayout\tGUILayout"
			],
			[
				"toolbar",
				"toolbarPopup\tGUIStyle { get; }"
			],
			[
				"GUiLa",
				"GUILayout\tGUILayout"
			],
			[
				"systemlan",
				"SystemLanguage\tSystemLanguage"
			],
			[
				"Remov",
				"RemoveAt(int index)\tvoid"
			],
			[
				"Lagn",
				"LanguageValue\tLanguageValue"
			],
			[
				"Language",
				"LanguageValue()\tLanguageValue()"
			],
			[
				"GUIla",
				"GUILayout\tGUILayout"
			],
			[
				"GUILa",
				"GUILayout\tGUILayout"
			],
			[
				"GUila",
				"GUILayout\tGUILayout"
			],
			[
				"GUILay",
				"GUILayout\tGUILayout"
			]
		]
	},
	"buffers":
	[
		{
			"file": "Assets/testScript.cs",
			"settings":
			{
				"buffer_size": 274,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 210.0,
		"last_filter": "boxy",
		"selected_items":
		[
			[
				"boxy",
				"Boxy Theme: Extras"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"toggle open",
				"View: Toggle Open Files in Side Bar"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			]
		],
		"width": 414.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/chrisf/Documents/GitHub/localization-tool",
		"/C/Users/chrisf/Documents/GitHub/localization-tool/Assets",
		"/C/Users/chrisf/Documents/GitHub/localization-tool/Assets/Language-Tool",
		"/C/Users/chrisf/Documents/GitHub/localization-tool/Assets/Language-Tool/Classes",
		"/C/Users/chrisf/Documents/GitHub/localization-tool/Assets/Language-Tool/Editor"
	],
	"file_history":
	[
		"/C/Users/chrisf/Documents/GitHub/localization-tool/Assets/Language-Tool/Editor/LanguageEditor.cs",
		"/C/Users/chrisf/Documents/GitHub/localization-tool/Assets/Language-Tool/Classes/Language.cs",
		"/C/Users/chrisf/Documents/GitHub/localization-tool/Assets/Language-Tool/Classes/LanguageValue.cs",
		"/D/Unity Projects/animationclipadd/Assets/animtest.cs",
		"/D/Xbox One Resources/XBONE Help Docs/Angry Bots Application Info.txt",
		"/D/Xbox One Resources/XBONE Help Docs/Xbox_Accounts.txt",
		"/D/Unity Projects/xboxdennistest/Assets/GameDVR/GameDVRMainMenu.cs",
		"/C/Users/chrisf/.hgrc",
		"/C/Users/Unity",
		"/D/Unity Projects/XboxOne-Addon/Assets/Editor/XboxOneDocs.cs",
		"/C/Users/chrisf/Documents/GitHub/localization-tool/Assets/Language-Tool/UI-Helpers/LocalizeText.cs",
		"/D/Unity Projects/portnumberneeded/New Unity Project/Assets/Multiplayer/Common/Game/JoinFriendGameSession.cs",
		"/D/Unity Projects/portnumberneeded/New Unity Project/Assets/Multiplayer/MP2015/MP2015.cs",
		"/C/Users/chrisf/AppData/Roaming/Sublime Text 3/Packages/User/C#.sublime-settings",
		"/C/Users/chrisf/Documents/GitHub/localization-tool/sb_localization.sublime-project",
		"/C/Users/chrisf/AppData/Roaming/Sublime Text 3/Packages/User/Plain text.sublime-settings",
		"/C/Users/chrisf/AppData/Roaming/Sublime Text 3/Packages/User/Preferences.sublime-settings"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"DetectSelectedFile",
			"mLevel.m_Keys",
			"DisplayKeys",
			"DisplayKeys()",
			"port",
			"m_NewValue",
			"m_newvalue"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Assets/testScript.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 274,
						"regions":
						{
						},
						"selection":
						[
							[
								271,
								271
							]
						],
						"settings":
						{
							"oops":
							{
								"0,5": "Using directive is not used by code and can be removed safely.",
								"140,152": "after '_' a lower letter should follow. (Rule 'Fields')",
								"254,260": "Method 'Update' has the same with 'Start'",
								"26,31": "Using directive is not used by code and can be removed safely.",
								"93,103": "'testScript' should start with an upper case letter. (Rule 'Types')"
							},
							"syntax": "Packages/C#/C#.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 98.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.variable_get":
	{
		"height": 86.0
	},
	"pinned_build_system": "",
	"project": "sb_localization.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"testsc",
				"Assets\\testScript.cs"
			],
			[
				"language",
				"Assets\\Language-Tool\\Classes\\Language.cs"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 276.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
